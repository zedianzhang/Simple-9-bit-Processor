mov r0 1
lft r0 3
lft r0 3
mov r5 4
lft r5 2
add r5 2
lft r5 2
add r5 1
mov sp r5
lod r5 sp
lft r5 1
rft r5 1
mov r1 0
loop4: mov sp r0
lod r2 sp
lup r2 r1
add r1 1
lft r2 1
rft r2 1
bne r2 r5
jump loop4
sub r1 1
lup r1
mov r0 1
lft r0 3
lft r0 3
mov sp r0
lod r0 sp
mov r2 1
lft r2 3
lft r2 2
mov r3 6
lft r3 3
lft r3 2
xor r0 r2
mov sp r3
ste sp r0
mov r4 0
mov r2 1
lft r2 3
lft r2 3
sub r2 1
loop5: lfsr r0 r1
add r3 1
mov sp r3
ste sp r0
add r4 1
bne r4 r2
jump loop5
mov r0 1
lft r0 3
lft r0 3
mov r2 1
lft r2 3
lft r2 2
mov r3 6
lft r3 3
lft r3 2
mov r5 0
loop6: mov sp r0
lod r1 sp
lft r1 1
rft r1 1
mov sp r3
lod r4 sp
xor r4 r1
bne r4 r2
jump next
add r0 1
add r3 1
add r5 1
bne r0 r3
jump loop6
next: mov r4 0
loop7: mov sp r0
lod r1 sp 
lod r2 sp
xor r1 
rft r1 3
rft r1 3
rft r1 1
lft r1 3
lft r1 3
lft r1 1
rft r2 3
rft r2 3
rft r2 1
lft r2 3
lft r2 3
lft r2 1
bne r1 r2
jump else
mov sp r0
lod r1 sp
mov sp r3
lod r2 sp
xor r1 r2
lft r1 1
rft r1 1
mov sp r4
ste sp r1
mov r1 0
bne r5 r1
jump end
else: mov sp r4
mov r6 4
lft r6 3
lft r6 2
ste sp r6
end: mov r1 1
lft r1 3
lft r1 3
add r5 1
add r3 1
add r0 1
add r4 1
bne r5 r1
jump loop7
mov r2 1
lft r2 3
lft r2 2
loop8: mov sp r4
ste sp r2
add r4 1
bne r4 r1
jump loop8
halt